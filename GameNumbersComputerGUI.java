/**
 *This class represents the number game as a student plays in front of the computer.
 * The computer has a winning tactics
 *@author Daniel and Olga
 */
public class GameNumbersComputerGUI extends javax.swing.JFrame {

  private int [] game; //choose numbers from this array
  int[][] mat; //for the algorithm
  int secondSum = 0; //the second score
  int first = 0; //first choice
  int firstSum = 0; //the first score
  int i, j, n; //indexes
  String computer_path = ""; //first path
  String student_path = ""; //second path
   
  /**
   *GameNumbersComputerGUI constructor   
   */
  public GameNumbersComputerGUI() {
        initComponents();
        createArray();
        mat = build_matrix();
        n = game.length;
        i = 0;
        j = n - 1;
        computerPlay();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        list1 = new java.awt.List();
        cumputer_score_ = new java.awt.TextField();
        student_score_ = new java.awt.TextField();
        top_button_ = new javax.swing.JButton();
        computer_score_value = new javax.swing.JLabel();
        student_score_value = new javax.swing.JLabel();
        lower_button_ = new javax.swing.JButton();
        user_chosed_message_ = new javax.swing.JLabel();
        Computer_path_ = new javax.swing.JTextField();
        student_path_ = new javax.swing.JTextField();
        computer_path_values_ = new java.awt.Label();
        student_path_values_ = new java.awt.Label();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cumputer_score_.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        cumputer_score_.setText("Computer Score:");
        cumputer_score_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cumputer_score_ActionPerformed(evt);
            }
        });

        student_score_.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        student_score_.setText("Student Score:");
        student_score_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                student_score_ActionPerformed(evt);
            }
        });

        top_button_.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        top_button_.setText("To Choose Top Number");
        top_button_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                top_button_ActionPerformed(evt);
            }
        });

        computer_score_value.setText("0");

        student_score_value.setText("0");

        lower_button_.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lower_button_.setText("To Choose Lower Number");
        lower_button_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lower_button_ActionPerformed(evt);
            }
        });

        user_chosed_message_.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        user_chosed_message_.setForeground(new java.awt.Color(255, 0, 0));

        Computer_path_.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Computer_path_.setText("Computer Path:");

        student_path_.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        student_path_.setText("Student Path:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(top_button_, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(83, 83, 83)
                                        .addComponent(student_score_value, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(52, 52, 52)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(student_path_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(student_score_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(24, 24, 24))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(student_path_values_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(67, 67, 67)))
                        .addComponent(list1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cumputer_score_, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addComponent(computer_score_value, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(Computer_path_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(computer_path_values_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(lower_button_, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(user_chosed_message_, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(11, 11, 11))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(top_button_)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(student_score_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(student_score_value, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(student_path_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(student_path_values_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(cumputer_score_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(computer_score_value, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Computer_path_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(computer_path_values_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(list1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lower_button_)
                .addGap(32, 32, 32)
                .addComponent(user_chosed_message_, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(588, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void cumputer_score_ActionPerformed(java.awt.event.ActionEvent evt) {                                                
        
    }                                               

    private void student_score_ActionPerformed(java.awt.event.ActionEvent evt) {                                               
        
    }                                              

    /**
     *top_button_ActionPerformed
     *In this function the student selects a number from the top edge of the game array and updates all the data accordingly 
     * @param evt - the click operation
     */
    private void top_button_ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        user_chosed_message_.setText("");
        secondSum = secondSum + game[i]; //update the student score
        student_score_value.setText(Integer.toString(secondSum));
        student_path = student_path + game[i] + "  "; //update the student path
        student_path_values_.setText(student_path);
	i++;
        showList(i, j); //show the updated list
        
        //if i<j continue the game
        if (i < j) {
            computerPlay();
        }else {
            WinnerGUI w = new WinnerGUI(); //the computer wins
            w.setVisible(true);
        }
    }                                           

    /**
     *lower_button_ActionPerformed
     *In this function the student selects a number from the down edge of the game array and updates all the data accordingly 
     * @param evt - the click operation
     */
    private void lower_button_ActionPerformed(java.awt.event.ActionEvent evt) {                                              
        user_chosed_message_.setText("");
        secondSum = secondSum + game[j]; //update the student score
        student_score_value.setText(Integer.toString(secondSum));
        student_path = student_path + game[j] + "  "; //update the student path
        student_path_values_.setText(student_path);
        j--;
        showList(i, j); //show the updated list
  
      //if i<j continue the game
        if (i < j) {
            computerPlay();
        } else {
        WinnerGUI w = new WinnerGUI();
        w.setVisible(true);
        }
    }                                             

    /**
     * createArray
     * create the array game
     */
    private void createArray() {
         
    	//random array size
        int size = (int)(Math.random()*20)+2;
        
        //if the size is odd add one so he will be even
        if(size % 2 != 0) {
            size++;
        }   
        
        //the game array
        game = new int [size];
        
        //set random numbers into the game array
        for (int i = 0; i<game.length; i++) 
            game[i] = (int)(Math.random()*100)+1;  
    }
    
    /**
     * showList
     * show the update game list - will be called after any choice by one of the players
     * @param start - start index
     * @param end - end index
     */
    private void showList(int start, int end) {
        list1.removeAll();
        for(int i=start; i<=end; i++) {
            int value = game[i];
            list1.add(Integer.toString(value));
        }
    }
    
    	/**
    	 * build_matrix
    	 * the computer will always win because he use algorithm based on matrix - this function build this matrix
    	 * @return - the matrix
    	 */
    	private int[][] build_matrix() {

    	//create matrix in the game array length
		int n = game.length;
		int[][] mat = new int[n][n];

		//copy the game array values into the diagonal matrix
		for (int i = 0; i < n; i++) {
			mat[i][i] = game[i];
		}

		//complete the matrix according to the algorithm - each index represent sub array 
		for (int i = n - 2; i >= 0; i--) {
			for (int j = i + 1; j < n; j++) {
				mat[i][j] = Math.max(game[i] - mat[i + 1][j], game[j] - mat[i][j - 1]);
			}
		}
		return mat;
	}
        
    	/**
    	 * computerPlay
    	 * computer play operation - done according to the legality of the algorithm 
    	 * so that in every situation the computer is the winner.
    	 */
        private void computerPlay() {

        //At each stage, the computer selects a number in the pair (indexes) in which the sum of the numbers from the same pairing in the array is greater
        if (game[i] - mat[i + 1][j] > game[j] - mat[i][j - 1]) {
		firstSum = firstSum + game[i]; 
                computer_score_value.setText(Integer.toString(firstSum)); //update the computer score value
                computer_path = computer_path + game[i] + "  "; //update the computer path
                computer_path_values_.setText(computer_path); //show the updated path
                first = i++;
                showList(i, j); //show the updated list after the choice 
       
     //Otherwise if the sum of the numbers in the second pair (indexes) is greater then he chooses a number from there       
	} else {
		firstSum = firstSum + game[j];
                computer_score_value.setText(Integer.toString(firstSum)); //update the computer score value
                computer_path = computer_path + game[j] + "  "; //update the computer path
                computer_path_values_.setText(computer_path); //show the updated path
                first = j--;
                showList(i, j); //show the updated list after the choice
            }
        user_chosed_message_.setText("This is your turn, please select a number"); //the player turn message
        }

    /**
     * main
     * the main function to run the program
     * @param args the command line arguments
     */
    public static void main(String args[]) {
    	
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameNumbersComputerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameNumbersComputerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameNumbersComputerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameNumbersComputerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        //Create and display the form
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameNumbersComputerGUI().setVisible(true);
            }
        });
    }

    //variables declaration                 
    private javax.swing.JTextField Computer_path_;
    private java.awt.Label computer_path_values_;
    private javax.swing.JLabel computer_score_value;
    private java.awt.TextField cumputer_score_;
    private java.awt.List list1;
    private javax.swing.JButton lower_button_;
    private javax.swing.JTextField student_path_;
    private java.awt.Label student_path_values_;
    private java.awt.TextField student_score_;
    private javax.swing.JLabel student_score_value;
    private javax.swing.JButton top_button_;
    private javax.swing.JLabel user_chosed_message_;               
}
